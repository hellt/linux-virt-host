---
- name: Enable nested virtualization
  gather_facts: no
  hosts: localhost
  handlers:
    - name: reload kvm_intel module
      shell: modprobe -r kvm_intel && modprobe kvm_intel
      listen: "reload kvm_intel"

    - name: reload kvm_amd
      shell: modprobe -r kvm_amd && modprobe kvm_amd
      listen: "reload kvm_intel module"
  tasks:
    # check if there are laucnhed VMs
    - name: list the Virtual Machine
      virt: command=list_vms
      register: virt_vms

    - name: check if there are launched VMs
      fail: msg="All VMs should be stopped in order to enable nested kvm option."
      when: virt_vms.list_vms|length > 0

    # Grab CPU flags from `/proc/cpuinfo` and put the result into the
    # `cpu_flags_cmd` variable.
    - name: get cpu flags
      command: >
        awk -F: '/^flags/ {print $2; exit}' /proc/cpuinfo
      register: cpu_flags_cmd

    # Extract the flags into a list variable named `cpu_flags`.
    - name: set cpu flags fact
      set_fact:
        cpu_flags: "{{ cpu_flags_cmd.stdout.split() }}"

    # Identify the processor manufacturer by looking for "Intel" or "AMD"
    # in `/proc/cpuinfo`.
    - name: get cpu vendor_id
      shell: "cat /proc/cpuinfo | grep vendor_id | uniq"
      register: cpu_vendor_id

    - name: check if cpu is Intel
      set_fact:
        is_intel: True
      when: "'Intel' in cpu_vendor_id.stdout"

    - name: check if cpu is AMD
      set_fact:
        is_amd: True
      when: "'AMD' in cpu_vendor_id.stdout"

    # Enable [nested virtualization][nested]. Set the `nested_virt` fact
    # to `true` if we have Intel processors and the `vmx` flag or we have
    # AMD processors and the `svm` flag.
    #
    # [nested]: https://www.kernel.org/doc/Documentation/virtual/kvm/nested-vmx.txt
    - name: set nested_virt fact
      set_fact:
        nested_virt: >-
          {{ ((is_intel and 'vmx' in cpu_flags)
          or (is_amd and 'svm' in cpu_flags))|bool }}

    # Configure appropriate options for the vendor-specific kvm module
    # in `/etc/modprobe.d/kvm.conf`.  This will result in either:
    #
    #     options kvm_intel nested=1
    #
    # Or:
    #
    #     options kvm_adm nested=1
    #
    # (Depending on the processor vendor)
    - name: configure kvm module for Intel
      blockinfile:
        dest: /etc/modprobe.d/kvm.conf
        block: |
          options kvm_intel nested=1
          options kvm_intel ept=y
          options kvm ignore_msrs=y
        state: present
        create: yes
      when: (nested_virt and (is_intel is defined))
      notify:
        - reload kvm_intel module

    - name: configure kvm module for AMD
      blockinfile:
        dest: /etc/modprobe.d/kvm.conf
        block: |
          options kvm_amd nested=1
        state: present
        create: yes
      when: (nested_virt and (is_amd is defined))
      notify:
        - reload kvm_amd module

    # List the appropriate kvm vendor module in
    # `/etc/modules-load.d/nested_kvm.conf`.  This will cause the module
    # to be loaded automatically next time the system boots.
    - name: arrange for kvm module to load at boot [intel]
      lineinfile:
        dest: /etc/modules-load.d/nested_kvm.conf
        line: kvm_intel
        state: present
        create: yes
      when: is_intel is defined

    - name: arrange for kvm module to load at boot [amd]
      lineinfile:
        dest: /etc/modules-load.d/nested_kvm.conf
        content: kvm_amd
        state: present
        create: yes
      when: is_amd is defined
